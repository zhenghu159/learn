mat <- matrix(nrow = 2, ncol = 2)
rownames(mat) <- c('Express','Not Express')
colnames(mat) <- c('Nnat','Deptor')
mat['Express','Nnat'] <- length(intersect(cell_NAc_i,cell_Nnat))/length(cell_Nnat)
mat['Not Express','Nnat'] <-
length(intersect(cell_NAc_i,cell_not_Nnat))/length(cell_not_Nnat)
mat['Express','Deptor'] <-
length(intersect(cell_NAc_i,cell_Deptor))/length(cell_Deptor)
mat['Not Express','Deptor'] <-
length(intersect(cell_NAc_i,cell_not_Deptor))/length(cell_not_Deptor)
mat
Bior_Dim2to1(mat)
df_plot <- Bior_Dim2to1(mat)
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity")
df_plot <- Bior_Dim2to1(mat)
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()
df_plot <- Bior_Dim2to1(mat)
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic() +
labs(title = 'NAc_i')
cell_Nnat <- colnames(M18.IT)[which(M18.IT@assays$RNA@data['Nnat',]>0)]
cell_not_Nnat <- setdiff(colnames(M18.IT),cell_Nnat)
cell_Deptor <- colnames(M18.IT)[which(M18.IT@assays$RNA@data['Deptor',]>0)]
cell_not_Deptor <- setdiff(colnames(M18.IT),cell_Deptor)
cell_NAc_i <- colnames(M18.IT)[which(M18.IT@meta.data$`M18_NAc-i`>0)]
cell_NAc_c <- colnames(M18.IT)[which(M18.IT@meta.data$`M18_NAc-c`>0)]
cell_CPU_i <- colnames(M18.IT)[which(M18.IT@meta.data$`M18_CPU-i`>0)]
cell_CPU_c <- colnames(M18.IT)[which(M18.IT@meta.data$`M18_CPU-c`>0)]
proj_cell <- cell_CPU_i
# NAc_i
mat <- matrix(nrow = 2, ncol = 2)
rownames(mat) <- c('Express','Not Express')
colnames(mat) <- c('Nnat','Deptor')
mat['Express','Nnat'] <- length(intersect(proj_cell,cell_Nnat))/length(cell_Nnat)
mat['Not Express','Nnat'] <-
length(intersect(proj_cell,cell_not_Nnat))/length(cell_not_Nnat)
mat['Express','Deptor'] <-
length(intersect(proj_cell,cell_Deptor))/length(cell_Deptor)
mat['Not Express','Deptor'] <-
length(intersect(proj_cell,cell_not_Deptor))/length(cell_not_Deptor)
matrix(data, nrow = rows, ncol = cols)
mat
df_plot <- Bior_Dim2to1(mat)
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic() +
labs(title = 'CPU_i')
mat <- matrix(nrow = 2, ncol = 2)
rownames(mat) <- c('NAc_i','CPU_i')
colnames(mat) <- c('Nnat','Deptor')
for (i in 1:length(rownames(mat))){
for (j in 1:length(colnames(mat))){
cell_gene <- colnames(M18.IT)[which(M18.IT@assays$RNA@data[colnames(mat)[j],] > 0)]
proj_area <- paste('M18',rownames(mat)[i])
cell_area <- colnames(M18.IT)[which(M18.IT@meta.data[,proj_area]>0)]
mat[i,j] <- length(intersect(cell_area,cell_gene))/length(cell_gene)
}
}
length(rownames(mat))
colnames(M18.IT)[which(M18.IT@assays$RNA@data[colnames(mat)[1],] > 0)]
mat <- matrix(nrow = 2, ncol = 2)
rownames(mat) <- c('NAc_i','CPU_i')
colnames(mat) <- c('Nnat','Deptor')
for (i in 1:length(rownames(mat))){
for (j in 1:length(colnames(mat))){
cell_gene <- colnames(M18.IT)[which(M18.IT@assays$RNA@data[colnames(mat)[j],] > 0)]
proj_area <- paste('M18',rownames(mat)[i],sep='_')
cell_area <- colnames(M18.IT)[which(M18.IT@meta.data[,proj_area]>0)]
mat[i,j] <- length(intersect(cell_area,cell_gene))/length(cell_gene)
}
}
paste('M18',rownames(mat)[1],sep='_')
head(M18.IT)
mat <- matrix(nrow = 2, ncol = 2)
rownames(mat) <- c('NAc-i','CPU-i')
colnames(mat) <- c('Nnat','Deptor')
for (i in 1:length(rownames(mat))){
for (j in 1:length(colnames(mat))){
cell_gene <- colnames(M18.IT)[which(M18.IT@assays$RNA@data[colnames(mat)[j],] > 0)]
proj_area <- paste('M18',rownames(mat)[i],sep='_')
cell_area <- colnames(M18.IT)[which(M18.IT@meta.data[,proj_area]>0)]
mat[i,j] <- length(intersect(cell_area,cell_gene))/length(cell_gene)
}
}
mat
mat
df_plot <- Bior_Dim2to1(mat)
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()
mat <- matrix(nrow = 2, ncol = 2)
rownames(mat) <- c('NAc-i','CPU-i')
colnames(mat) <- c('Nnat','Deptor')
for (i in 1:length(rownames(mat))){
for (j in 1:length(colnames(mat))){
cell_gene <- colnames(M18.IT)[which(M18.IT@assays$RNA@data[colnames(mat)[j],] > 1)]
proj_area <- paste('M18',rownames(mat)[i],sep='_')
cell_area <- colnames(M18.IT)[which(M18.IT@meta.data[,proj_area]>0)]
mat[i,j] <- length(intersect(cell_area,cell_gene))/length(cell_gene)
}
}
df_plot <- Bior_Dim2to1(mat)
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()
mat <- matrix(nrow = 2, ncol = 2)
rownames(mat) <- c('NAc-i','CPU-i')
colnames(mat) <- c('Nnat','Deptor')
for (i in 1:length(rownames(mat))){
for (j in 1:length(colnames(mat))){
cell_gene <- colnames(M18.IT)[which(M18.IT@assays$RNA@data[colnames(mat)[j],] > 2)]
proj_area <- paste('M18',rownames(mat)[i],sep='_')
cell_area <- colnames(M18.IT)[which(M18.IT@meta.data[,proj_area]>0)]
mat[i,j] <- length(intersect(cell_area,cell_gene))/length(cell_gene)
}
}
df_plot <- Bior_Dim2to1(mat)
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()
mat <- matrix(nrow = 2, ncol = 2)
rownames(mat) <- c('NAc-i','CPU-i')
colnames(mat) <- c('Nnat','Deptor')
for (i in 1:length(rownames(mat))){
for (j in 1:length(colnames(mat))){
cell_gene <- colnames(M18.IT)[which(M18.IT@assays$RNA@data[colnames(mat)[j],] > 3)]
proj_area <- paste('M18',rownames(mat)[i],sep='_')
cell_area <- colnames(M18.IT)[which(M18.IT@meta.data[,proj_area]>0)]
mat[i,j] <- length(intersect(cell_area,cell_gene))/length(cell_gene)
}
}
df_plot <- Bior_Dim2to1(mat)
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()
mat <- matrix(nrow = 2, ncol = 2)
rownames(mat) <- c('NAc-i','CPU-i')
colnames(mat) <- c('Nnat','Deptor')
for (i in 1:length(rownames(mat))){
for (j in 1:length(colnames(mat))){
cell_gene <- colnames(M18.IT)[which(M18.IT@assays$RNA@data[colnames(mat)[j],] > 1)]
proj_area <- paste('M18',rownames(mat)[i],sep='_')
cell_area <- colnames(M18.IT)[which(M18.IT@meta.data[,proj_area]>0)]
mat[i,j] <- length(intersect(cell_area,cell_gene))/length(cell_gene)
}
}
df_plot <- Bior_Dim2to1(mat)
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()
df_plot
df_plot <- Bior_Dim2to1(mat)
df_plot$row <- factor(df_plot$row, levels = c('NAc-i','CPU-i'))
df_plot$col <- factor(df_plot$col, levels = c('Nnat','Deptor'))
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()
df_plot <- Bior_Dim2to1(mat)
df_plot$row <- factor(df_plot$row, levels = c('NAc-i','CPU-i'))
df_plot$col <- factor(df_plot$col, levels = c('Nnat','Deptor'))
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()+
labs(x='',y='Project propotion')
df_plot <- Bior_Dim2to1(mat)
df_plot$row <- factor(df_plot$row, levels = c('NAc-i','CPU-i'))
df_plot$col <- factor(df_plot$col, levels = c('Nnat','Deptor'))
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()+
labs(x='',y='Project propotion') +
scale_fill_manual(values = category20)
head(M18.IT.barcode)
mat <- matrix(nrow = 2, ncol = 2)
rownames(mat) <- c('NAc-i','CPU-i')
colnames(mat) <- c('Nnat','Deptor')
for (i in 1:length(rownames(mat))){
for (j in 1:length(colnames(mat))){
cell_gene <- colnames(M18.IT)[which(M18.IT@assays$RNA@data[colnames(mat)[j],] > 1)]
proj_area <- paste('M18',rownames(mat)[i],sep='_')
cell_area <- colnames(M18.IT.barcode)[which(M18.IT.barcode@meta.data[,proj_area]>0.2)]
mat[i,j] <- length(intersect(cell_area,cell_gene))/length(cell_gene)
}
}
df_plot <- Bior_Dim2to1(mat)
df_plot$row <- factor(df_plot$row, levels = c('NAc-i','CPU-i'))
df_plot$col <- factor(df_plot$col, levels = c('Nnat','Deptor'))
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()+
labs(x='',y='Project propotion') +
scale_fill_manual(values = category20)
mat <- matrix(nrow = 2, ncol = 2)
rownames(mat) <- c('NAc-i','CPU-i')
colnames(mat) <- c('Nnat','Deptor')
for (i in 1:length(rownames(mat))){
for (j in 1:length(colnames(mat))){
cell_gene <- colnames(M18.IT)[which(M18.IT@assays$RNA@data[colnames(mat)[j],] > 1)]
proj_area <- paste('M18',rownames(mat)[i],sep='_')
cell_area <- colnames(M18.IT)[which(M18.IT@meta.data[,proj_area]>0)]
mat[i,j] <- length(intersect(cell_area,cell_gene))/length(cell_gene)
}
}
df_plot <- Bior_Dim2to1(mat)
df_plot$row <- factor(df_plot$row, levels = c('NAc-i','CPU-i'))
df_plot$col <- factor(df_plot$col, levels = c('Nnat','Deptor'))
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()+
labs(x='',y='Project propotion') +
scale_fill_manual(values = category20)
mat <- matrix(nrow = 2, ncol = 2)
rownames(mat) <- c('NAc-i','CPU-i')
colnames(mat) <- c('Nnat','Deptor','Cdh13')
Proj_area <- c('NAc-i','CPU-i')
gene <- c('Nnat','Deptor','Cdh13')
mat <- matrix(nrow = length(Proj_area), ncol = length(gene))
rownames(mat) <- Proj_area
colnames(mat) <- gene
for (i in 1:length(rownames(mat))){
for (j in 1:length(colnames(mat))){
cell_gene <- colnames(M18.IT)[which(M18.IT@assays$RNA@data[colnames(mat)[j],] > 1)]
proj_area <- paste('M18',rownames(mat)[i],sep='_')
cell_area <- colnames(M18.IT)[which(M18.IT@meta.data[,proj_area]>0)]
mat[i,j] <- length(intersect(cell_area,cell_gene))/length(cell_gene)
}
}
df_plot <- Bior_Dim2to1(mat)
df_plot$row <- factor(df_plot$row, levels = c('NAc-i','CPU-i'))
df_plot$col <- factor(df_plot$col, levels = c('Nnat','Deptor'))
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()+
labs(x='',y='Project propotion') +
scale_fill_manual(values = category20)
df_plot <- Bior_Dim2to1(mat)
#df_plot$row <- factor(df_plot$row, levels = c('NAc-i','CPU-i'))
#df_plot$col <- factor(df_plot$col, levels = c('Nnat','Deptor'))
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()+
labs(x='',y='Project propotion') +
scale_fill_manual(values = category20)
Proj_area <- c('NAc-i','CPU-i')
gene <- c('Nnat','Deptor','Cdh13')
mat <- matrix(nrow = length(Proj_area), ncol = length(gene))
rownames(mat) <- Proj_area
colnames(mat) <- gene
for (i in 1:length(rownames(mat))){
for (j in 1:length(colnames(mat))){
cell_gene <- colnames(M18.IT)[which(M18.IT@assays$RNA@data[colnames(mat)[j],] > 0)]
proj_area <- paste('M18',rownames(mat)[i],sep='_')
cell_area <- colnames(M18.IT)[which(M18.IT@meta.data[,proj_area]>0)]
mat[i,j] <- length(intersect(cell_area,cell_gene))/length(cell_gene)
}
}
df_plot <- Bior_Dim2to1(mat)
#df_plot$row <- factor(df_plot$row, levels = c('NAc-i','CPU-i'))
#df_plot$col <- factor(df_plot$col, levels = c('Nnat','Deptor'))
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()+
labs(x='',y='Project propotion') +
scale_fill_manual(values = category20)
Proj_area <- c('NAc-i','CPU-i')
gene <- c('Nnat','Deptor','Cdh13')
mat <- matrix(nrow = length(Proj_area), ncol = length(gene))
rownames(mat) <- Proj_area
colnames(mat) <- gene
for (i in 1:length(rownames(mat))){
for (j in 1:length(colnames(mat))){
cell_gene <- colnames(M18.IT)[which(M18.IT@assays$RNA@data[colnames(mat)[j],] > 1)]
proj_area <- paste('M18',rownames(mat)[i],sep='_')
cell_area <- colnames(M18.IT)[which(M18.IT@meta.data[,proj_area]>0)]
mat[i,j] <- length(intersect(cell_area,cell_gene))/length(cell_gene)
}
}
df_plot <- Bior_Dim2to1(mat)
#df_plot$row <- factor(df_plot$row, levels = c('NAc-i','CPU-i'))
#df_plot$col <- factor(df_plot$col, levels = c('Nnat','Deptor'))
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()+
labs(x='',y='Project propotion') +
scale_fill_manual(values = category20)
Proj_area <- c('NAc-i','CPU-i')
gene <- c('Nnat','Deptor','Cdh13')
mat <- matrix(nrow = length(Proj_area), ncol = length(gene))
rownames(mat) <- Proj_area
colnames(mat) <- gene
for (i in 1:length(rownames(mat))){
for (j in 1:length(colnames(mat))){
cell_gene <- colnames(M18.IT)[which(M18.IT@assays$RNA@data[colnames(mat)[j],] > 1)]
proj_area <- paste('M18',rownames(mat)[i],sep='_')
cell_area <- colnames(M18.IT.barcode)[which(M18.IT.barcode@meta.data[,proj_area]>0.2)]
mat[i,j] <- length(intersect(cell_area,cell_gene))/length(cell_gene)
}
}
df_plot <- Bior_Dim2to1(mat)
#df_plot$row <- factor(df_plot$row, levels = c('NAc-i','CPU-i'))
#df_plot$col <- factor(df_plot$col, levels = c('Nnat','Deptor'))
ggplot(df_plot, aes(x=col, y=value, fill=row)) +
geom_bar(position="dodge", stat="identity") +
theme_classic()+
labs(x='',y='Project propotion') +
scale_fill_manual(values = category20)
library(Seurat)
all.inte <- readRDS('../result/all.inte.barcode.rds')
DimPlot(all.inte, split.by = 'sample', group.by = 'Maintype',reduction = 'umap',
label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
library(ggplot2)
DimPlot(all.inte, split.by = 'sample', group.by = 'Maintype',reduction = 'umap',
label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
head(all.inte)
head(Idents(all.inte))
unique(all.inte$Maintype)
all.inte$Maintype[which(all.inte$seurat_clusters==15)] <- 'NPCs'
DimPlot(all.inte, split.by = 'sample', group.by = 'Maintype',reduction = 'umap',
label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
DimPlot(all.inte, split.by = 'sample', group.by = 'seurat_clusters',reduction = 'umap',
label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
all.inte <- readRDS('../result/all.inte.barcode.rds')
all.inte <- readRDS('../result/all.inte.barcode.rds')
head(all.inte)
all.inte@meta.data <- all.inte@meta.data[,1:6]
head(all.inte)
DefaultAssay(all.inte)
DefaultAssay(all.inte) <- 'integrated'
all.inte <- FindNeighbors(all.inte, reduction = "pca", dims = 1:20)
all.inte <- FindClusters(all.inte, resolution = 0.4)
DimPlot(all.inte, split.by = 'sample', reduction = 'umap', label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
head(Idents(all.inte))
head(all.inte)
DimPlot(all.inte, split.by = 'sample', reduction = 'umap', group.by = 'integrated_snn_res.0.4'
label = T, ncol = 2) +
DimPlot(all.inte, split.by = 'sample', reduction = 'umap', group.by = 'integrated_snn_res.0.4',
label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
Idents(all.inte) <- 'integrated_snn_res.0.4'
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
Idents(all.inte) <- 'integrated_snn_res.0.4'
DimPlot(all.inte, split.by = 'sample', reduction = 'umap', label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
head(all.inte)
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',
group.by = 'integrated_snn_res.0.4', label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
unique(Idents(all.inte))
all.inte$seurat_clusters <- all.inte$integrated_snn_res.0.4
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',
label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',
group.by = 'integrated_snn_res.0.4', label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
head(all.inte)
all.inte <- FindSubCluster(all.inte, cluster=3,graph.name="integrated_snn",
resolution = 0.1,
subcluster.name = "integrated_snn_res.0.4")
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',
group.by = 'integrated_snn_res.0.4', label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
all.inte <- readRDS('../result/all.inte.barcode.rds')
all.inte@meta.data <- all.inte@meta.data[,1:6]
all.inte <- readRDS('../result/all.inte.barcode.rds')
all.inte@meta.data <- all.inte@meta.data[,1:6]
DefaultAssay(all.inte) <- 'integrated'
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',
group.by = 'integrated_snn_res.0.4', label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
all.inte <- FindClusters(all.inte, resolution = 0.4)
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',
group.by = 'integrated_snn_res.0.4', label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
?FindSubCluster
unique(Idents(all.inte))
head(Idents(all.inte))
head(all.inte$integrated_snn_res.0.4)
all.inte <- FindSubCluster(all.inte, cluster=3,
graph.name="integrated_snn",
resolution = 0.1,
subcluster.name = "integrated_snn_res.0.4")
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',
group.by = 'integrated_snn_res.0.4', label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
unique(all.inte$integrated_snn_res.0.4)
head(all.inte$integrated_snn_res.0.4)
DefaultAssay(all.inte)
all.inte <- ScaleData(all.inte, verbose = FALSE)
all.inte <- RunPCA(all.inte, npcs = 50, verbose = FALSE)
all.inte <- FindNeighbors(all.inte, reduction = "pca", dims = 1:20)
all.inte <- FindClusters(all.inte, resolution = 0.4)
all.inte <- RunUMAP(all.inte, reduction = "pca", dims = 1:20)
all.inte <- RunTSNE(all.inte, reduction = "pca", dims = 1:20)
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',
group.by = 'integrated_snn_res.0.4', label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',
label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
all.inte <- readRDS('../result/all.inte.barcode.rds')
DimPlot(all.inte, split.by = 'sample', group.by = 'seurat_clusters',reduction = 'umap',
label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
head(all.inte)
DimPlot(all.inte, split.by = 'sample', group.by = 'Maintype',reduction = 'umap',
label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
DefaultAssay(all.inte)
DefaultAssay(all.inte) <- 'integrated'
all.inte <- FindClusters(all.inte, resolution = 0.5)
head(all.inte)
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',
group.by = "integrated_snn_res.0.5",
label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',
group.by = "integrated_snn_res.0.4",
label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
all.inte <- FindClusters(all.inte, resolution = 0.4)
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',
group.by = "integrated_snn_res.0.4",
label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',
group.by = "integrated_snn_res.0.5",
label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
all.inte <- FindClusters(all.inte, resolution = 0.6)
DimPlot(all.inte, split.by = 'sample', reduction = 'umap',
group.by = "integrated_snn_res.0.6",
label = T, ncol = 2) +
theme(axis.line = element_blank(), axis.ticks = element_blank(),
axis.text = element_blank(), plot.title = element_text(size = 30)) +
labs(x='', y='')
setwd("C:/Users/13081/OneDrive - webmail.hzau.edu.cn/Github/learn/R/hdWGCNA")
# single-cell analysis package
library(Seurat)
# plotting and data science packages
library(tidyverse)
library(cowplot)
library(patchwork)
# co-expression network analysis packages:
library(WGCNA)
library(hdWGCNA)
# using the cowplot theme for ggplot
theme_set(theme_cowplot())
# set random seed for reproducibility
set.seed(12345)
# load the Zhou et al snRNA-seq dataset
seurat_obj <- readRDS('Zhou_2020.rds')
0.79*0.79
0.8*0.8
0.79^5
0.8^5
